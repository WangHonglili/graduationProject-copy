import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.7427aee3.js";const g=JSON.parse('{"title":"开始","description":"","frontmatter":{},"headers":[],"relativePath":"guide/start.md"}'),e={name:"guide/start.md"},p=o(`<h1 id="开始" tabindex="-1">开始 <a class="header-anchor" href="#开始" aria-label="Permalink to &quot;开始&quot;">​</a></h1><p>做好准备工作后，请在项目根目录下依次执行以下命令：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 安装依赖</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 注意，必须使用 pnpm 安装依赖，请勿使用 npm 或 yarn 安装依赖</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 运行</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>
<span class="line"></span></code></pre></div><p>运行成功后，会自动访问页面，默认地址为 <code>http://localhost:9000</code></p><div class="tip custom-block"><p class="custom-block-title">注意</p><p>由于框架有使用到 simple-git-hooks 这个依赖包，所以请确保在安装依赖前，已经使用 <code>git init</code> 对项目进行过 git 环境初始化，如果你在安装依赖后再初始化了 git 环境，请在 git 环境初始化之后再执行一遍 <code>pnpm install</code> 安装命令。</p><p>了解更多请阅读《<a href="./coding-standard.html#simple-git-hooks-lint-staged">代码规范 - simple-git-hooks &amp; lint-staged</a>》。</p><p>此外，如果 git 仓库目录和框架目录并非同一个，则需要在 <code>package.json</code> 中修改 <code>postinstall</code> 脚本，切换到 git 所在目录。例如 git 目录是 <code>project/</code> ，而框架目录是 <code>project/fantastic-admin/</code> ，则在 <code>package.json</code> 里找到 <code>simple-git-hooks</code> 配置并修改：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">simple-git-hooks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">pre-commit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cd ./fantastic-admin/ &amp;&amp; pnpm lint-staged</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">preserveUnused</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>修改后重新执行一下 <code>pnpm install</code> 即可。</p></div><div class="warning custom-block"><p class="custom-block-title">报错</p><p>安装依赖时提示 404 ，或者安装结束后，运行时提示「 &#39;vite&#39; 不是内部或外部命令，也不是可运行的程序或批处理文件 」，都些都是依赖未安装成功导致的。可以尝试执行 <code>pnpm config set registry https://registry.npmmirror.com/</code> 切换为国内 npmmirror 源（也可以使用 <a href="https://github.com/Pana/nrm" target="_blank" rel="noreferrer">nrm</a> 一键切换源），然后删除根目录下 <code>/node_modules</code> 文件夹并重新安装依赖。</p><p>如果依旧无法运行（基本不太可能），可尝试删除根目录下 <code>/node_modules</code> 文件夹与 <code>pnpm-lock.yaml</code> 文件后，再删除 <code>package.json</code> 中 <code>&quot;preinstall&quot;: &quot;npx only-allow pnpm&quot;</code> 这句脚本，最后使用 <code>npm / yarn</code> 进行安装依赖。但需要清楚一点，这样操作后，将无法与官方环境锁定的依赖包版本保持一致，可能会出现无法预知的问题，非必要情况下，请勿使用该方案。</p></div>`,6),t=[p];function l(c,i,r,d,m,y){return a(),n("div",null,t)}const h=s(e,[["render",l]]);export{g as __pageData,h as default};
